{
    "patches": [
        {
            "label": "2025-10-02_21-40-50",
            "content": "@@ -173,24 +173,37 @@\n  def ent\n-ra\n+e\n r(self\n+, passMax: int\n ):%0A     \n@@ -348,161 +348,8 @@\n %22)%0A%0A\n-    def sair(self):%0A        if self.passageiros %3E 0:%0A            self.passageiros -= 1%0A        else:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A\n     \n@@ -368,26 +368,22 @@\n r(self, \n-quantidade\n+gasMax\n : int):%0A\n@@ -411,18 +411,14 @@\n  += \n-quantidade\n+gasMax\n %0A   \n@@ -508,567 +508,47 @@\n Max%0A\n-%0A    def dirigir(self, distancia: int):%0A        if self.passageiros == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            return%0A        if self.gasolina == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        if self.gasolina %3E= distancia:%0A            self.gasolina -= distancia%0A            self.km += distancia%0A        else:%0A            distancia_percorrida = self.gasolina%0A            self.km += distancia_percorrida%0A            print(f%22fail: tanque vazio apos andar %7Bdistancia_percorrida%7D km%22)%0A            self.gasolina = 0\n+            print(%22fail: tanque cheio%22)\n %0A%0A  \n@@ -658,48 +658,4 @@\n km%7D%22\n-%0A%0A    def mostrar(self):%0A        print(self)\n",
            "lines": "22"
        },
        {
            "label": "2025-10-02_21-53-04",
            "content": "@@ -1292,20 +1292,16 @@\n , gas: %7B\n-int(\n self.gas\n@@ -1305,17 +1305,16 @@\n gasolina\n-)\n %7D, km: %7B\n",
            "lines": "46"
        },
        {
            "label": "2025-10-02_21-54-34",
            "content": "@@ -10,113 +10,8 @@\n ro:%0A\n-    passageiros: int%0A    kilometros: int%0A    gasolina: int%0A    gasolinaMax: int%0A    passageirosMax: int%0A%0A\n     \n@@ -24,32 +24,24 @@\n init__(self)\n- -%3E None\n :%0A        se\n@@ -73,25 +73,17 @@\n   self.k\n-ilometros\n+m\n  = 0%0A   \n@@ -153,23 +153,16 @@\n elf.pass\n-ageiros\n Max = 2%0A\n@@ -177,24 +177,17 @@\n  ent\n-e\n+ra\n r(self)\n- -%3E None\n :%0A  \n@@ -223,23 +223,16 @@\n elf.pass\n-ageiros\n Max:%0A   \n@@ -343,27 +343,18 @@\n def \n-leave\n+sair\n (self)\n- -%3E None\n :%0A  \n@@ -496,36 +496,40 @@\n def \n-fuel(self, qtd: int) -%3E None\n+abastecer(self, quantidade: int)\n :%0A  \n@@ -556,10 +556,17 @@\n += q\n-td\n+uantidade\n %0A   \n@@ -662,20 +662,22 @@\n    def d\n+i\n ri\n-ve\n+gir\n (self, d\n@@ -683,22 +683,19 @@\n dist\n+ancia\n : int)\n- -%3E None\n :%0A  \n@@ -777,34 +777,51 @@\n carro%22)%0A        \n-el\n+    return%0A        \n if self.gasolina\n@@ -875,18 +875,35 @@\n         \n-el\n+    return%0A        \n if self.\n@@ -918,16 +918,21 @@\n  %3E= dist\n+ancia\n :%0A      \n@@ -954,24 +954,29 @@\n lina -= dist\n+ancia\n %0A           \n@@ -986,25 +986,17 @@\n lf.k\n-ilometros\n+m\n  += dist\n %0A   \n@@ -991,16 +991,21 @@\n  += dist\n+ancia\n %0A       \n@@ -1027,47 +1027,31 @@\n     \n-print(f%22fail: tanque vazio apos andar %7B\n+distancia_percorrida = \n self\n@@ -1063,14 +1063,8 @@\n lina\n-%7D km%22)\n %0A   \n@@ -1082,34 +1082,111 @@\n lf.k\n-ilometros += self.gasolina\n+m += distancia_percorrida%0A            print(f%22fail: tanque vazio apos andar %7Bdistancia_percorrida%7D km%22)\n %0A   \n@@ -1221,20 +1221,23 @@\n     def \n-show\n+__str__\n (self) -\n@@ -1242,12 +1242,11 @@\n  -%3E \n-None\n+str\n :%0A  \n@@ -1251,22 +1251,23 @@\n         \n-print(\n+return \n f%22pass: \n@@ -1288,24 +1288,28 @@\n ros%7D, gas: %7B\n+int(\n self.gasolin\n@@ -1309,16 +1309,17 @@\n gasolina\n+)\n %7D, km: %7B\n@@ -1328,434 +1328,51 @@\n lf.k\n-ilometros%7D%22)%0A%0A%0Acarro = Carro()%0Awhile True:%0A    try:%0A        linha = input().strip().split()%0A    except EOFError:%0A        break%0A    if not linha: %0A        continue%0A    cmd = linha%5B0%5D%0A    if cmd == %22$end%22: break%0A    if cmd == %22$show%22: carro.show()%0A    elif cmd == %22$enter%22: carro.enter()%0A    elif cmd == %22$leave%22: carro.leave()%0A    elif cmd == %22$fuel%22: carro.fuel(int(linha%5B1%5D))%0A    elif cmd == %22$drive%22: carro.drive(int(linha%5B1%5D))%0A\n+m%7D%22%0A%0A    def mostrar(self):%0A        print(self)\n",
            "lines": "46"
        },
        {
            "label": "2025-10-02_22-00-23",
            "content": "@@ -14,80 +14,140 @@\n     \n-def __init__(self):%0A        self.pass_max = 2%0A        self.gas_max = 100\n+passageiros: int%0A    kilometros: int%0A    gasolina: int%0A    gasolinaMax: int%0A    passageirosMax: int%0A%0A    def __init__(self) -%3E None:\n %0A   \n@@ -160,17 +160,23 @@\n elf.pass\n-_\n+ageiros\n  = 0%0A   \n@@ -177,34 +177,41 @@\n  0%0A        self.\n-ga\n+kilometro\n s = 0%0A        se\n@@ -217,107 +217,83 @@\n elf.\n-km\n+gasolina\n  = 0%0A\n-%0A\n+   \n     \n-def __str__(self):%0A        return f%22pass: %7Bself.pass_%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22\n+ self.gasolinaMax = 100%0A        self.passageirosMax = 2\n %0A%0A  \n@@ -305,24 +305,32 @@\n  enter(self)\n+ -%3E None\n :%0A        if\n@@ -339,17 +339,23 @@\n elf.pass\n-_\n+ageiros\n  %3C self.\n@@ -358,18 +358,24 @@\n elf.pass\n-_m\n+ageirosM\n ax:%0A    \n@@ -391,17 +391,23 @@\n elf.pass\n-_\n+ageiros\n  += 1%0A  \n@@ -492,16 +492,24 @@\n ve(self)\n+ -%3E None\n :%0A      \n@@ -522,17 +522,23 @@\n elf.pass\n-_\n+ageiros\n  %3E 0:%0A  \n@@ -556,17 +556,23 @@\n elf.pass\n-_\n+ageiros\n  -= 1%0A  \n@@ -654,26 +654,33 @@\n l(self, \n-increment)\n+qtd: int) -%3E None\n :%0A      \n@@ -693,21 +693,20 @@\n .gas\n- += increment\n+olina += qtd\n %0A   \n@@ -721,16 +721,21 @@\n self.gas\n+olina\n  %3E self.\n@@ -737,18 +737,22 @@\n self.gas\n-_m\n+olinaM\n ax:%0A    \n@@ -767,16 +767,21 @@\n self.gas\n+olina\n  = self.\n@@ -783,18 +783,22 @@\n self.gas\n-_m\n+olinaM\n ax%0A%0A    \n@@ -817,21 +817,30 @@\n lf, dist\n-ance)\n+: int) -%3E None\n :%0A      \n@@ -853,17 +853,23 @@\n elf.pass\n-_\n+ageiros\n  == 0:%0A \n@@ -897,20 +897,20 @@\n l: n\n-%C3%A3o h%C3%A1\n+ao ha\n  ningu\n-%C3%A9\n+e\n m no\n@@ -926,36 +926,18 @@\n         \n-    return%0A%0A        \n+el\n if self.\n@@ -939,16 +939,21 @@\n self.gas\n+olina\n  == 0:%0A \n@@ -1003,99 +1003,35 @@\n     \n-    return%0A%0A        # 1 litro de gasolina por 1 km percorrido%0A        gas_needed \n+elif self.gasolina %3E\n = dist\n-ance\n+:\n %0A   \n@@ -1039,78 +1039,33 @@\n     \n-%0A  \n     \n-  if gas_needed %3C= self.gas:%0A            self.gas -= gas_needed\n+self.gasolina -= dist\n %0A   \n@@ -1079,25 +1079,33 @@\n   self.k\n-m\n+ilometros\n  += dist\n ance%0A   \n@@ -1096,20 +1096,16 @@\n  += dist\n-ance\n %0A       \n@@ -1127,108 +1127,110 @@\n     \n-# Anda o m%C3%A1ximo que der%0A            dist_percorrida = self.gas%0A            self.km += dist_percorrid\n+print(f%22fail: tanque vazio apos andar %7Bself.gasolina%7D km%22)%0A            self.kilometros += self.gasolin\n a%0A  \n@@ -1251,164 +1251,172 @@\n .gas\n+olina\n  = 0%0A\n+%0A\n     \n-        print(f%22fail: tanque vazio apos andar %7Bdist_percorrida%7D km%22)%0A%0Adef main():%0A    carro = Carro()%0A    %0A    import sys%0A    for line in sys.stdin\n+def show(self) -%3E None:%0A        print(f%22pass: %7Bself.passageiros%7D, gas: %7Bself.gasolina%7D, km: %7Bself.kilometros%7D%22)%0A%0A%0Acarro = Carro()%0Awhile True:%0A    try\n :%0A  \n@@ -1428,24 +1428,28 @@\n  lin\n-e\n+ha\n  = \n-l\n in\n-e\n+put()\n .strip()\n %0A   \n@@ -1448,58 +1448,71 @@\n ip()\n-%0A        if not line or line.startswith('#'):%0A    \n+.split()%0A    except EOFError:%0A        break%0A    if not linha: %0A\n     \n@@ -1528,135 +1528,91 @@\n nue%0A\n-%0A\n     \n-    parts = line.split()%0A        command = parts%5B0%5D%0A%0A        if comman\n+cmd = linha%5B0%5D%0A    if cmd == %22$end%22: break%0A    if cm\n d == \n-'\n+%22\n $show\n-':%0A            print(carro)%0A        %0A    \n+%22: carro.show()%0A\n     \n@@ -1621,39 +1621,23 @@\n if c\n-omman\n+m\n d == \n-'\n+%22\n $enter\n-':%0A           \n+%22:\n  car\n@@ -1647,29 +1647,16 @@\n enter()%0A\n-        %0A    \n     elif\n@@ -1661,39 +1661,23 @@\n if c\n-omman\n+m\n d == \n-'\n+%22\n $leave\n-':%0A           \n+%22:\n  car\n@@ -1687,29 +1687,16 @@\n leave()%0A\n-        %0A    \n     elif\n@@ -1701,241 +1701,49 @@\n if c\n-omman\n+m\n d == \n-'\n+%22\n $fuel\n-':%0A            if len(parts) %3E= 2:%0A                try:%0A                    increment = int(parts%5B1%5D)%0A                    carro.fuel(increment)%0A                except ValueError:%0A                    pass%0A        %0A    \n+%22: carro.fuel(int(linha%5B1%5D))%0A\n     \n@@ -1752,322 +1752,47 @@\n if c\n-omman\n+m\n d == \n-'\n+%22\n $drive\n-':%0A            if len(parts) %3E= 2:%0A                try:%0A                    distance = int(parts%5B1%5D)%0A                    carro.drive(distance)%0A                except ValueError:%0A                    pass%0A        %0A        elif command == '$end':%0A            break%0A%0Aif __name__ == %22__main__%22:%0A    main(\n+%22: carro.drive(int(linha%5B1%5D)\n )%0A\n",
            "lines": "63"
        },
        {
            "label": "2025-10-02_22-05-01",
            "content": "@@ -1,62 +1,33 @@\n-class Carro:%0A    def __init__(self):%0A        self.\n+@@ -51,21 +51,16 @@%0A \n pass_max\n : in\n@@ -26,38 +26,57 @@\n _max\n+%0A-\n : int\n+%0A \n  = 2\n-%0A        self\n+%250A   %0A@@ -76,21 +76,16 @@%0A \n .gas_max\n : in\n@@ -75,38 +75,59 @@\n _max\n+%0A-\n : int\n+%0A \n  = 100\n-%0A        se\n+%250A %0A@@ -101,21 +101,16 @@%0A \n lf.pass_\n : in\n@@ -122,33 +122,58 @@\n lf.pass_\n+%0A-\n : int\n+%0A \n  = 0\n-%0A       \n+%250A   %0A@@ -122,21 +122,16 @@%0A\n  self.ga\n@@ -177,464 +177,112 @@\n .gas\n+%0A-\n : int\n- = 0%0A        self.km: int = 0%0A%0A    def __str__(self):%0A        return f%22pass: %7Bself.pass_%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A%0A    def enter(self):%0A        if self.pass_ %3C self.pass_max:%0A            self.pass_ += 1%0A        else:%0A            print(%22fail: limite de pessoas atingido%22)%0A%0A    def leave(self):%0A        if self.pass_ %3E 0:%0A            self.pass_ -= 1%0A        else:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A    def fuel(self, i\n+%0A  = 0%250A   %0A@@ -142,21 +142,16 @@%0A  self.km%0A-: int%0A  = 0%250A%250A  %0A@@ -568,30 +568,17 @@%0A \n ncrement\n : in\n@@ -277,24 +277,26 @@\n ncrement\n+%0A-\n : int) -\n %3E None:%0A\n@@ -291,155 +291,68 @@\n t) -\n-%3E\n+%253E\n  None\n-:%0A        self.gas += increment%0A        if self.gas %3E self.gas_max:%0A            self.gas = self.gas_max%0A%0A    def drive(self, dist\n+%0A+)%0A :%250A      %0A@@ -706,22 +706,9 @@%0A \n ance\n+%0A-\n : int) -\n %3E No\n@@ -351,1634 +351,163 @@\n t) -\n-%3E\n+%253E\n  None\n-:%0A        if self.pass_ == 0:%0A            print(%22fail: n%C3%A3o h%C3%A1 ningu%C3%A9m no carro%22)%0A            return%0A%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A%0A        # 1 litro de gasolina por 1 km percorrido%0A        gas_needed: int = distance%0A        %0A        if gas_needed %3C= self.gas:%0A            self.gas -= gas_needed%0A            self.km += distance%0A        else:%0A            # Anda o m%C3%A1ximo que der%0A            dist_percorrida: int = self.gas%0A            self.km += dist_percorrida%0A            self.gas = 0%0A            print(f%22fail: tanque vazio apos andar %7Bdist_percorrida%7D km%22)%0A%0Adef main():%0A    carro = Carro()%0A    %0A    import sys%0A    for line in sys.stdin:%0A        line = line.strip()%0A        if not line or line.startswith('#'):%0A            continue%0A%0A        parts = line.split()%0A        command = parts%5B0%5D%0A%0A        if command == '$show':%0A            print(carro)%0A        %0A        elif command == '$enter':%0A            carro.enter()%0A        %0A        elif command == '$leave':%0A            carro.leave()%0A        %0A        elif command == '$fuel':%0A            if len(parts) %3E= 2:%0A                try:%0A                    increment = int(parts%5B1%5D)%0A                    carro.fuel(increment)%0A                except ValueError:%0A                    pass%0A        %0A        elif command == '$drive':%0A            if len(parts) %3E= 2:%0A                try:%0A                    distance = int(parts%5B1%5D)%0A                    carro.drive(distance)%0A                except ValueError:%0A                    pass%0A        %0A        elif command == '$end':%0A            break%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+%0A+)%0A :%250A  %0A@@ -958,21 +958,16 @@%0A s_needed%0A-: int%0A  = dista%0A@@ -1131,16 +1131,16 @@%0A que der%250A%0A+%0A         %0A@@ -1162,13 +1162,8 @@%0A rida%0A-: int%0A  = s\n %0A\n",
            "lines": "42"
        },
        {
            "label": "2025-10-02_22-06-04",
            "content": "@@ -51,23 +51,20 @@\n pass\n-ageiros\n+_max\n : int = \n 0%0A  \n@@ -51,33 +51,33 @@\n pass_max: int = \n-0\n+2\n %0A        self.km\n@@ -78,18 +78,23 @@\n elf.\n-km\n+gas_max\n : int = \n 0%0A  \n@@ -81,32 +81,34 @@\n .gas_max: int = \n+10\n 0%0A        self.g\n@@ -106,24 +106,21 @@\n    self.\n-gasolina\n+pass_\n : int = \n@@ -141,24 +141,16 @@\n .gas\n-olinaMax\n : int = \n 100%0A\n@@ -137,34 +137,32 @@\n self.gas: int = \n-10\n 0%0A        self.p\n@@ -164,23 +164,18 @@\n elf.\n-passMax\n+km\n : int = \n 2%0A%0A \n@@ -170,17 +170,17 @@\n : int = \n-2\n+0\n %0A%0A    de\n@@ -229,23 +229,17 @@\n elf.pass\n-ageiros\n+_\n %7D, gas: \n@@ -247,21 +247,16 @@\n self.gas\n-olina\n %7D, km: %7B\n@@ -277,18 +277,17 @@\n  def ent\n-ra\n+e\n r(self):\n@@ -307,23 +307,17 @@\n elf.pass\n-ageiros\n+_\n  %3C self.\n@@ -320,17 +320,18 @@\n elf.pass\n-M\n+_m\n ax:%0A    \n@@ -351,44 +351,14 @@\n pass\n-ageiros += 1%0A            return True\n+_ += 1\n %0A   \n@@ -425,33 +425,8 @@\n do%22)\n-%0A            return False\n %0A%0A  \n@@ -431,20 +431,21 @@\n     def \n-sair\n+leave\n (self):%0A\n@@ -464,23 +464,17 @@\n elf.pass\n-ageiros\n+_\n  %3E 0:%0A  \n@@ -496,45 +496,15 @@\n pass\n-ageiros\n+_\n  -= 1%0A\n-            return True%0A\n     \n@@ -567,33 +567,8 @@\n ro%22)\n-%0A            return False\n %0A%0A  \n@@ -595,36 +595,36 @@\n rement: int) -%3E \n-bool\n+None\n :%0A        self.g\n@@ -629,35 +629,11 @@\n .gas\n-olina = min(self.gasolina\n  +\n+=\n  inc\n@@ -642,27 +642,44 @@\n ment\n-, self.gasolinaMax)\n+%0A        if self.gas %3E self.gas_max:\n %0A   \n@@ -683,27 +683,43 @@\n         \n-return True\n+    self.gas = self.gas_max\n %0A%0A    de\n@@ -754,12 +754,12 @@\n  -%3E \n-bool\n+None\n :%0A  \n@@ -780,15 +780,9 @@\n pass\n-ageiros\n+_\n  == \n@@ -806,36 +806,36 @@\n int(%22fail: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no carro%22)\n@@ -845,38 +845,32 @@\n           return\n- False\n %0A%0A        if sel\n@@ -874,21 +874,16 @@\n self.gas\n-olina\n  == 0:%0A \n@@ -943,42 +943,83 @@\n turn\n- False%0A%0A        consumo_necessario\n+%0A%0A        # 1 litro de gasolina por 1 km percorrido%0A        gas_needed: int\n  = d\n@@ -1026,16 +1026,24 @@\n istance%0A\n+        \n %0A       \n@@ -1050,162 +1050,148 @@\n  if \n-self.gasolina %3E= consumo_necessario:%0A            self.gasolina -= consumo_necessario%0A            self.km += distance%0A            return True%0A        else:\n+gas_needed %3C= self.gas:%0A            self.gas -= gas_needed%0A            self.km += distance%0A        else:%0A            # Anda o m%C3%A1ximo que der\n %0A   \n@@ -1199,29 +1199,24 @@\n         dist\n-ancia\n _percorrida \n@@ -1214,16 +1214,21 @@\n rcorrida\n+: int\n  = self.\n@@ -1234,26 +1234,8 @@\n .gas\n-olina%0A            \n %0A   \n@@ -1254,29 +1254,24 @@\n f.km += dist\n-ancia\n _percorrida%0A\n@@ -1290,21 +1290,16 @@\n self.gas\n-olina\n  = 0%0A   \n@@ -1311,66 +1311,8 @@\n     \n-%0A            if distancia_percorrida %3E 0:%0A                \n prin\n@@ -1350,21 +1350,12 @@\n ar %7B\n-int(distancia\n+dist\n _per\n@@ -1365,114 +1365,14 @@\n rida\n-)\n %7D km%22)\n-%0A            else:%0A                print(%22fail: tanque vazio%22)%0A            return False%0A%0Aimport sys\n %0A%0Ade\n@@ -1415,45 +1415,17 @@\n    i\n-f sys.stdin.isatty():%0A        return%0A\n+mport sys\n %0A   \n@@ -1495,16 +1495,40 @@\n not line\n+ or line.startswith('#')\n :%0A      \n@@ -1547,35 +1547,8 @@\n ue%0A%0A\n-        print(f%22$%7Bline%7D%22)%0A%0A\n     \n@@ -1581,17 +1581,21 @@\n        c\n-m\n+omman\n d = part\n@@ -1599,24 +1599,16 @@\n arts%5B0%5D%0A\n-        \n %0A       \n@@ -1616,20 +1616,25 @@\n if c\n-m\n+omman\n d == \n-%22\n+'$\n show\n-%22\n+'\n :%0A  \n@@ -1656,16 +1656,25 @@\n (carro)%0A\n+        %0A\n         \n@@ -1683,21 +1683,26 @@\n if c\n-m\n+omman\n d == \n-%22\n+'$\n enter\n-%22\n+'\n :%0A  \n@@ -1724,14 +1724,22 @@\n .ent\n-ra\n+e\n r()%0A\n+        %0A\n     \n@@ -1752,21 +1752,26 @@\n if c\n-m\n+omman\n d == \n-%22\n+'$\n leave\n-%22\n+'\n :%0A  \n@@ -1790,15 +1790,25 @@\n rro.\n-sair\n+leave\n ()%0A\n+        %0A\n     \n@@ -1821,20 +1821,25 @@\n if c\n-m\n+omman\n d == \n-%22\n+'$\n fuel\n-%22\n+'\n :%0A  \n@@ -1855,34 +1855,35 @@\n  if len(parts) %3E\n- 1\n+= 2\n :%0A              \n@@ -2029,32 +2029,41 @@\n            pass%0A\n+        %0A\n         elif cmd\n@@ -2064,21 +2064,26 @@\n if c\n-m\n+omman\n d == \n-%22\n+'$\n drive\n-%22\n+'\n :%0A  \n@@ -2107,18 +2107,19 @@\n parts) %3E\n- 1\n+= 2\n :%0A      \n@@ -2272,32 +2272,41 @@\n            pass%0A\n+        %0A\n         elif cmd\n@@ -2307,19 +2307,24 @@\n if c\n-m\n+omman\n d == \n-%22end%22\n+'$end'\n :%0A  \n@@ -2377,16 +2377,9 @@\n   main()\n-      %0A\n %0A\n",
            "lines": "92"
        },
        {
            "label": "2025-10-03_00-29-23",
            "content": "@@ -54,16 +54,21 @@\n sageiros\n+: int\n  = 0%0A   \n@@ -79,16 +79,21 @@\n  self.km\n+: int\n  = 0%0A   \n@@ -102,32 +102,37 @@\n    self.gasolina\n+: int\n  = 0%0A        sel\n@@ -144,16 +144,21 @@\n olinaMax\n+: int\n  = 100%0A \n@@ -176,16 +176,21 @@\n .passMax\n+: int\n  = 2%0A%0A  \n",
            "lines": "102"
        },
        {
            "label": "2025-10-03_00-30-16",
            "content": "@@ -76,19 +76,14 @@\n elf.\n-passMax = 2\n+km = 0\n %0A   \n@@ -149,22 +149,27 @@\n    self.\n-km = 0\n+passMax = 2\n %0A%0A    de\n@@ -382,32 +382,50 @@\n     return True%0A\n+        else:%0A    \n         print(%22f\n@@ -454,24 +454,28 @@\n  atingido%22)%0A\n+    \n         retu\n@@ -587,32 +587,50 @@\n     return True%0A\n+        else:%0A    \n         print(%22f\n@@ -660,32 +660,36 @@\n carro%22)%0A        \n+    \n return False%0A%0A  \n@@ -705,27 +705,39 @@\n l(self, \n-quantidade)\n+increment: int) -%3E bool\n :%0A      \n@@ -774,26 +774,25 @@\n olina + \n-quantidade\n+increment\n , self.g\n@@ -851,19 +851,31 @@\n  distanc\n-ia)\n+e: int) -%3E bool\n :%0A      \n@@ -1068,32 +1068,71 @@\n   return False%0A%0A\n+        consumo_necessario = distance%0A%0A\n         if self.\n@@ -1143,25 +1143,34 @@\n lina %3E= \n-distancia\n+consumo_necessario\n :%0A      \n@@ -1192,25 +1192,34 @@\n lina -= \n-distancia\n+consumo_necessario\n %0A       \n@@ -1241,18 +1241,17 @@\n  distanc\n-ia\n+e\n %0A       \n@@ -1293,25 +1293,36 @@\n         \n-km_rodado\n+distancia_percorrida\n  = self.\n@@ -1366,25 +1366,36 @@\n f.km += \n-km_rodado\n+distancia_percorrida\n %0A       \n@@ -1445,25 +1445,36 @@\n      if \n-km_rodado\n+distancia_percorrida\n  %3E 0:%0A  \n@@ -1530,17 +1530,33 @@\n ar %7B\n-km_rodado\n+int(distancia_percorrida)\n %7D km\n@@ -1646,16 +1646,28 @@\n  False%0A%0A\n+import sys%0A%0A\n def main\n@@ -1703,64 +1703,74 @@\n     \n-try:%0A        while True:%0A            line = input()%0A    \n+if sys.stdin.isatty():%0A        return%0A%0A    for line in sys.stdin:%0A\n     \n@@ -1793,33 +1793,16 @@\n strip()%0A\n-            %0A    \n         \n@@ -1826,20 +1826,16 @@\n         \n-    \n continue\n@@ -1836,20 +1836,16 @@\n ntinue%0A%0A\n-    \n         \n@@ -1871,20 +1871,16 @@\n         \n-    \n parts = \n@@ -1900,20 +1900,16 @@\n         \n-    \n cmd = pa\n@@ -1919,33 +1919,25 @@\n %5B0%5D%0A        \n-    %0A    \n+%0A\n         if c\n@@ -1958,28 +1958,24 @@\n             \n-    \n print(carro)\n@@ -1975,20 +1975,16 @@\n (carro)%0A\n-    \n         \n@@ -2012,28 +2012,24 @@\n             \n-    \n carro.entrar\n@@ -2027,28 +2027,24 @@\n ro.entrar()%0A\n-    \n         elif\n@@ -2056,28 +2056,24 @@\n == %22leave%22:%0A\n-    \n             \n@@ -2085,36 +2085,32 @@\n .sair()%0A        \n-    \n elif cmd == %22fue\n@@ -2117,36 +2117,32 @@\n l%22:%0A            \n-    \n if len(parts) %3E \n@@ -2152,36 +2152,32 @@\n                 \n-    \n try:%0A           \n@@ -2189,22 +2189,17 @@\n     \n-    quantidade\n+increment\n  = i\n@@ -2203,36 +2203,32 @@\n = int(parts%5B1%5D)%0A\n-    \n                 \n@@ -2246,23 +2246,19 @@\n uel(\n-quantidade)%0A   \n+increment)%0A\n     \n@@ -2261,33 +2261,32 @@\n                 \n- \n except ValueErro\n@@ -2304,37 +2304,29 @@\n             \n-    \n pass%0A\n-    \n         elif\n@@ -2346,36 +2346,32 @@\n e%22:%0A            \n-    \n if len(parts) %3E \n@@ -2381,36 +2381,32 @@\n                 \n-    \n try:%0A           \n@@ -2414,29 +2414,24 @@\n         \n-    \n distanc\n-ia\n+e\n  = int(p\n@@ -2455,28 +2455,24 @@\n             \n-    \n carro.drive(\n@@ -2482,16 +2482,11 @@\n tanc\n-ia)%0A    \n+e)%0A\n     \n@@ -2532,37 +2532,29 @@\n             \n-    \n pass%0A\n-    \n         elif\n@@ -2584,76 +2584,13 @@\n     \n-    \n break\n-%0A    except EOFError:%0A        pass%0A    except:%0A        pass\n %0A%0Aif\n@@ -2629,10 +2629,11 @@\n n()     \n+ \n %0A%0A\n",
            "lines": "102"
        },
        {
            "label": "2025-10-03_00-33-41",
            "content": "@@ -54,21 +54,16 @@\n sageiros\n-: int\n  = 0%0A   \n@@ -79,21 +79,16 @@\n .passMax\n-: int\n  = 2%0A   \n@@ -105,21 +105,16 @@\n gasolina\n-: int\n  = 0%0A   \n@@ -134,21 +134,16 @@\n olinaMax\n-: int\n  = 100%0A \n@@ -156,21 +156,16 @@\n  self.km\n-: int\n  = 0%0A%0A  \n@@ -671,30 +671,17 @@\n antidade\n-: int) -%3E bool\n+)\n :%0A      \n@@ -802,22 +802,9 @@\n ncia\n-: int) -%3E bool\n+)\n :%0A  \n@@ -1150,32 +1150,32 @@\n e%0A        else:%0A\n+\n             km_r\n@@ -1183,13 +1183,8 @@\n dado\n-: int\n  = s\n",
            "lines": "100"
        },
        {
            "label": "2025-10-03_00-34-47",
            "content": "class Carro:\n    def __init__(self):\n        self.passageiros: int = 0\n        self.passMax: int = 2\n        self.gasolina: int = 0\n        self.gasolinaMax: int = 100\n        self.km: int = 0\n\n    def __str__(self):\n        return f\"pass: {self.passageiros}, gas: {self.gasolina}, km: {self.km}\"\n\n    def entrar(self):\n        if self.passageiros < self.passMax:\n            self.passageiros += 1\n            return True\n        print(\"fail: limite de pessoas atingido\")\n        return False\n\n    def sair(self):\n        if self.passageiros > 0:\n            self.passageiros -= 1\n            return True\n        print(\"fail: nao ha ninguem no carro\")\n        return False\n\n    def fuel(self, quantidade: int) -> bool:\n        self.gasolina = min(self.gasolina + quantidade, self.gasolinaMax)\n        return True\n\n    def drive(self, distancia: int) -> bool:\n        if self.passageiros == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return False\n\n        if self.gasolina == 0:\n            print(\"fail: tanque vazio\")\n            return False\n\n        if self.gasolina >= distancia:\n            self.gasolina -= distancia\n            self.km += distancia\n            return True\n        else:\n            km_rodado: int = self.gasolina\n            \n            self.km += km_rodado\n            self.gasolina = 0\n            \n            if km_rodado > 0:\n                print(f\"fail: tanque vazio apos andar {km_rodado} km\")\n            else:\n                print(\"fail: tanque vazio\")\n            return False\n\ndef main():\n    carro = Carro()\n    \n    try:\n        while True:\n            line = input()\n            line = line.strip()\n            \n            if not line:\n                continue\n\n            print(f\"${line}\")\n\n            parts = line.split()\n            cmd = parts[0]\n            \n            if cmd == \"show\":\n                print(carro)\n            elif cmd == \"enter\":\n                carro.entrar()\n            elif cmd == \"leave\":\n                carro.sair()\n            elif cmd == \"fuel\":\n                if len(parts) > 1:\n                    try:\n                        quantidade = int(parts[1])\n                        carro.fuel(quantidade)\n                    except ValueError:\n                        pass\n            elif cmd == \"drive\":\n                if len(parts) > 1:\n                    try:\n                        distancia = int(parts[1])\n                        carro.drive(distancia)\n                    except ValueError:\n                        pass\n            elif cmd == \"end\":\n                break\n    except EOFError:\n        pass\n    except:\n        pass\n\nif __name__ == \"__main__\":\n    main()     \n\n",
            "lines": "100"
        }
    ]
}