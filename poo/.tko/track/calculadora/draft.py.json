{
    "patches": [
        {
            "label": "2025-10-04_21-53-29",
            "content": "@@ -944,540 +944,4 @@\n  1%0A%0A\n-def main():%0A    calc = None%0A    while True:%0A        comando = input().split()%0A        if comando%5B0%5D == %22end%22:%0A            break%0A        elif comando%5B0%5D == %22init%22:%0A            calc = Calculadora(int(comando%5B1%5D))%0A        elif comando%5B0%5D == %22show%22:%0A            print(calc)%0A        elif comando%5B0%5D == %22charge%22:%0A            calc.charge(int(comando%5B1%5D))%0A        elif comando%5B0%5D == %22sum%22:%0A            calc.sum(float(comando%5B1%5D), float(comando%5B2%5D))%0A        elif comando%5B0%5D == %22div%22:%0A            calc.div(float(comando%5B1%5D), float(comando%5B2%5D))%0A%0A%0A\n",
            "lines": "36"
        },
        {
            "label": "2025-10-04_22-06-05",
            "content": "@@ -1,17 +1,17 @@\n class Ca\n-l\n+u\n culadora\n@@ -1202,326 +1202,96 @@\n     \n-if calc is not None:%0A                print(calc)%0A            else:%0A                print(%22fail: calculadora n%E9%81%94o inicializada%22)%0A        elif comando%5B0%5D == %22charge%22:%0A            if calc is not None:%0A                calc.charge(int(comando%5B1%5D))%0A            else:%0A                print(%22fail: calculadora n%E9%81%94o inicializada%22\n+print(calc)%0A        elif comando%5B0%5D == %22charge%22:%0A            calc.charge(int(comando%5B1%5D)\n )%0A  \n@@ -1326,45 +1326,8 @@\n m%22:%0A\n-            if calc is not None:%0A    \n     \n@@ -1385,86 +1385,8 @@\n %5D))%0A\n-            else:%0A                print(%22fail: calculadora n%E9%81%94o inicializada%22)%0A\n     \n@@ -1419,45 +1419,8 @@\n v%22:%0A\n-            if calc is not None:%0A    \n     \n@@ -1478,84 +1478,6 @@\n %5D))%0A\n-            else:%0A                print(%22fail: calculadora n%E9%81%94o inicializada%22)%0A\n %0A%0A\n",
            "lines": "54"
        },
        {
            "label": "2025-10-04_22-06-38",
            "content": "@@ -976,26 +976,8 @@\n     \n-%0A    try:%0A        \n whil\n@@ -992,24 +992,23 @@\n         \n-    line\n+comando\n  = input\n@@ -1013,556 +1013,173 @@\n ut()\n-%0A            line = line.strip()%0A            %0A            if not line:%0A                continue%0A%0A            print(f%22$%7Bline%7D%22)%0A%0A            parts = line.split()%0A            if not parts:%0A                continue%0A                %0A            cmd = parts%5B0%5D%0A            %0A            if cmd == %22init%22:%0A                if len(parts) %3E= 2:%0A                    batteryMax = int(parts%5B1%5D)%0A                    calc = Calculadora(batteryMax)%0A                else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            elif cmd\n+.split()%0A        if comando%5B0%5D == %22end%22:%0A            break%0A        elif comando%5B0%5D == %22init%22:%0A            calc = Calculadora(int(comando%5B1%5D))%0A        elif comando%5B0%5D\n  == \n@@ -1186,20 +1186,16 @@\n %22show%22:%0A\n-    \n         \n@@ -1231,28 +1231,24 @@\n             \n-    \n print(calc)%0A\n@@ -1247,20 +1247,16 @@\n t(calc)%0A\n-    \n         \n@@ -1273,36 +1273,32 @@\n                 \n-    \n print(%22fail: cal\n@@ -1299,33 +1299,33 @@\n l: calculadora n\n-a\n+%E9%81%94\n o inicializada%22)\n@@ -1337,141 +1337,37 @@\n     \n-            %0A            elif cmd == %22charge%22:%0A                if len(parts) %3E= 2:%0A                    value = int(parts%5B1%5D)%0A        \n+elif comando%5B0%5D == %22charge%22:%0A\n     \n@@ -1407,32 +1407,24 @@\n             \n-        \n calc.charge(\n@@ -1427,22 +1427,25 @@\n rge(\n-value)%0A       \n+int(comando%5B1%5D))%0A\n     \n@@ -1448,39 +1448,30 @@\n             \n- \n else:%0A\n-        \n             \n@@ -1492,33 +1492,33 @@\n l: calculadora n\n-a\n+%E9%81%94\n o inicializada%22)\n@@ -1530,115 +1530,23 @@\n     \n-        else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            elif cmd\n+elif comando%5B0%5D\n  == \n@@ -1564,38 +1564,35 @@\n         \n-  \n-  \n if \n-len(parts) %3E= 3\n+calc is not None\n :%0A      \n@@ -1605,157 +1605,55 @@\n     \n-    a = float(parts%5B1%5D)%0A                    b = float(parts%5B2%5D)%0A                    if calc is not None:%0A                        calc.sum(a, b)%0A     \n+calc.sum(float(comando%5B1%5D), float(comando%5B2%5D))%0A\n     \n@@ -1660,33 +1660,22 @@\n         \n-   \n else:%0A\n-        \n         \n@@ -1700,33 +1700,33 @@\n l: calculadora n\n-a\n+%E9%81%94\n o inicializada%22)\n@@ -1738,250 +1738,34 @@\n     \n-        else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            elif cmd == %22div%22:%0A                if len(parts) %3E= 3:%0A                    a = float(parts%5B1%5D)%0A                    b = float(parts%5B2%5D)%0A        \n+elif comando%5B0%5D == %22div%22:%0A\n     \n@@ -1805,32 +1805,24 @@\n             \n-        \n calc.div(a, \n@@ -1822,318 +1822,122 @@\n div(\n-a, b)%0A                    else:%0A                        print(%22fail: calculadora nao inicializada%22)%0A                else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            else:%0A                print(%22fail: comando invalido%22)%0A                %0A    except EOFError:%0A        pass\n+float(comando%5B1%5D), float(comando%5B2%5D))%0A            else:%0A                print(%22fail: calculadora n%E9%81%94o inicializada%22)\n %0A%0A%0A\n",
            "lines": "66"
        },
        {
            "label": "2025-10-04_22-07-48",
            "content": "@@ -3102,78 +3102,6 @@\n ass%0A\n-    except:%0A        pass%0A%0A    if __name__ == %22__main__%22:%0A        main()%0A\n %0A%0A\n",
            "lines": "107"
        },
        {
            "label": "2025-10-04_22-08-47",
            "content": "@@ -972,16 +972,34 @@\n one%0A    \n+%0A    try:%0A        \n while Tr\n@@ -1006,28 +1006,42 @@\n ue:%0A        \n-try:\n+    line = input()\n %0A           \n@@ -1048,23 +1048,20 @@\n  line = \n+l\n in\n-put()\n+e\n .strip()\n@@ -1061,16 +1061,29 @@\n strip()%0A\n+            %0A\n         \n@@ -1155,16 +1155,17 @@\n line%7D%22)%0A\n+%0A\n         \n@@ -1185,24 +1185,92 @@\n ine.split()%0A\n+            if not parts:%0A                continue%0A                %0A\n             \n@@ -1284,16 +1284,28 @@\n arts%5B0%5D%0A\n+            \n %0A       \n@@ -1324,11 +1324,12 @@\n == %22\n-end\n+init\n %22:%0A \n@@ -1347,46 +1347,79 @@\n     \n-break%0A            elif cmd =\n+if len(parts) %3E= 2:%0A                    batteryMax \n = \n-%22\n in\n-it%22:%0A\n+t(parts%5B1%5D)%0A    \n     \n@@ -1453,117 +1453,439 @@\n ora(\n-int(parts%5B1%5D))%0A            elif cmd == %22show%22:%0A                print(calc)%0A            elif cmd == %22charge%22:%0A\n+batteryMax)%0A                else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            elif cmd == %22show%22:%0A                if calc is not None:%0A                    print(calc)%0A                else:%0A                    print(%22fail: calculadora nao inicializada%22)%0A                    %0A            elif cmd == %22charge%22:%0A                if len(parts) %3E= 2:%0A                    value = int(parts%5B1%5D)%0A    \n     \n@@ -1932,24 +1932,29 @@\n             \n+     \n calc.charge(\n@@ -1957,54 +1957,355 @@\n rge(\n-int(parts%5B1%5D))%0A            elif cmd == %22sum%22:%0A\n+value)%0A                    else:%0A                        print(%22fail: calculadora nao inicializada%22)%0A                else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            elif cmd == %22sum%22:%0A                if len(parts) %3E= 3:%0A                    a = float(parts%5B1%5D)%0A                    b = float(parts%5B2%5D)%0A    \n     \n@@ -2352,24 +2352,29 @@\n             \n+     \n calc.sum(flo\n@@ -2374,73 +2374,354 @@\n sum(\n-float(parts%5B1%5D), float(parts%5B2%5D))%0A            elif cmd == %22div%22:%0A\n+a, b)%0A                    else:%0A                        print(%22fail: calculadora nao inicializada%22)%0A                else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            elif cmd == %22div%22:%0A                if len(parts) %3E= 3:%0A                    a = float(parts%5B1%5D)%0A                    b = float(parts%5B2%5D)%0A    \n     \n@@ -2768,24 +2768,29 @@\n             \n+  \n+   \n calc.div(flo\n@@ -2790,86 +2790,350 @@\n div(\n-float(parts%5B1%5D), float(parts%5B2%5D))%0A        except EOFError:%0A            break%0A%0A\n+a, b)%0A                    else:%0A                        print(%22fail: calculadora nao inicializada%22)%0A                else:%0A                    print(%22fail: comando invalido%22)%0A                    %0A            else:%0A                print(%22fail: comando invalido%22)%0A                %0A    except EOFError:%0A        pass%0A    except:%0A        pass%0A%0A    \n if _\n@@ -3155,16 +3155,20 @@\n ain__%22:%0A\n+    \n     main\n@@ -3165,12 +3165,15 @@\n       main()\n+%0A%0A%0A\n",
            "lines": "112"
        },
        {
            "label": "2025-10-06_02-05-40",
            "content": "@@ -12,16 +12,73 @@\n ladora:%0A\n+    display: float%0A    battery: int%0A    batteryMax: int%0A%0A\n     def \n@@ -138,10 +138,8 @@\n  = 0\n-.0\n %0A   \n@@ -245,18 +245,17 @@\n %22display\n- =\n+:\n  %7Bself.d\n@@ -274,18 +274,17 @@\n  battery\n- =\n+:\n  %7Bself.b\n@@ -352,14 +352,28 @@\n ery \n++\n = \n-min(\n+value%0A        if \n self\n@@ -385,16 +385,9 @@\n ery \n-+ value,\n+%3E\n  sel\n@@ -402,43 +402,91 @@\n yMax\n-)%0A\n+:\n %0A    \n-def useBattery(self) -%3E bool\n+        self.battery = self.batteryMax%0A%0A    def sum(self, a: float, b: float)\n :%0A  \n@@ -499,33 +499,33 @@\n if self.battery \n-%3C\n+=\n = 0:%0A           \n@@ -583,14 +583,8 @@\n turn\n- False\n %0A   \n@@ -597,80 +597,23 @@\n elf.\n-batter\n+displa\n y \n--\n = \n-1%0A        return True%0A%0A    def sum(self, a: float, b: float):\n+a + b\n %0A   \n@@ -621,62 +621,25 @@\n     \n-if \n self.\n-useB\n+b\n attery\n-():%0A            self.display = a + b\n+ -= 1\n %0A%0A  \n@@ -703,9 +703,9 @@\n ery \n-%3C\n+=\n = 0:\n@@ -775,42 +775,8 @@\n turn\n-       %0A        self.battery -= 1%0A\n %0A   \n@@ -835,16 +835,46 @@\n  zero%22)%0A\n+            self.battery -= 1%0A\n         \n@@ -884,17 +884,16 @@\n  return%0A\n-%0A\n         \n@@ -913,17 +913,41 @@\n = a / b%0A\n-%0A\n+        self.battery -= 1\n %0A%0Adef ma\n",
            "lines": "68"
        },
        {
            "label": "2025-10-06_02-06-25",
            "content": "class Calculadora:\n    def __init__(self, batteryMax: int):\n        self.display = 0.0\n        self.battery = 0\n        self.batteryMax = batteryMax\n\n    def __str__(self):\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\n\n    def charge(self, value: int):\n        self.battery = min(self.battery + value, self.batteryMax)\n\n    def useBattery(self) -> bool:\n        if self.battery <= 0:\n            print(\"fail: bateria insuficiente\")\n            return False\n        self.battery -= 1\n        return True\n\n    def sum(self, a: float, b: float):\n        if self.useBattery():\n            self.display = a + b\n\n    def div(self, a: float, b: float):\n        if self.battery <= 0:\n            print(\"fail: bateria insuficiente\")\n            return       \n        self.battery -= 1\n\n        if b == 0:\n            print(\"fail: divisao por zero\")\n            return\n\n        self.display = a / b\n\n\n\ndef main():\n    calc = None\n    while True:\n        try:\n            line = input().strip()\n            if not line:\n                continue\n\n            print(f\"${line}\")\n            parts = line.split()\n            cmd = parts[0]\n\n            if cmd == \"end\":\n                break\n            elif cmd == \"init\":\n                calc = Calculadora(int(parts[1]))\n            elif cmd == \"show\":\n                print(calc)\n            elif cmd == \"charge\":\n                if calc is not None:\n                   calc.charge(int(parts[1]))\n            elif cmd == \"sum\":\n                if calc is not None:\n                   calc.sum(float(parts[1]), float(parts[2]))\n            elif cmd == \"div\":\n                if calc is not None:\n                   calc.div(float(parts[1]), float(parts[2]))\n        except EOFError:\n            break\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "69"
        }
    ]
}